% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotMarkerHeat.R
\name{plotMarkerHeat}
\alias{plotMarkerHeat}
\title{plotMarkerHeat}
\usage{
plotMarkerHeat(exp, classes, markers,
  colors = colorRampPalette(rev(c("orangered4", "orangered", "gray90",
  "dodgerblue", "dodgerblue4")))(n = 100),
  newOrder = 1:length(unique(classes)), clusterGenes = FALSE,
  clusterGenesK = length(unique(classes)), averageCells = 0,
  outs = FALSE, plotheat = TRUE, gaps = TRUE, seed = 10)
}
\arguments{
\item{exp}{A matrix of expression values. Typically the one supplied to
\code{sortGenes}.}

\item{classes}{A vector or factor of cell classes, whose length is equal to
\code{ncol(exp)}.}

\item{markers}{A character vector of gene names to plot in the heatmap.}

\item{colors}{Color palette used for the heatmap.}

\item{newOrder}{Reorder the clusters in the heatmap? See Examples.}

\item{clusterGenes}{Cluster genes before plotting?}

\item{clusterGenesK}{How many clusters should genes by clustered into? See
Details.}

\item{averageCells}{Plot averages of cells instead of individual cells. Use 
you have a large number of genes. See Details.}

\item{outs}{Should gene cluster output and pheatmap object be returned? FALSE
by default.}

\item{plotheat}{Should the heatmap be drawn? TRUE by default.}

\item{gaps}{Should the heatmap have gaps between cell types and gene clusters? 
TRUE by default.}

\item{seed}{Randomization seed used for gene clustering initialization.}
}
\value{
If \code{outs} is TRUE, \code{plotMarkerHeat} returns a list
  containing: \item{p}{The pheatmap object corresponding to the plot.}
  \item{gene_class_info}{Gene cluster assignments if gene clustering was
  requested. See Details.} \item{new_class_info}{The new order of cell
  clusters. See Examples.}
}
\description{
Plot a heatmap of expression values for a select set of genes. Optionally
also cluster those genes.
}
\details{
\code{clusterGenesK} parameter controls the number of gene clusters when 
\code{clusterGenes} is \code{TRUE}. By default, it is equal to the number of
cell types/clusters. This is usually a good initial guess, the optimal 
number of clusters (what does that even mean?) is typically somewhere around
this value in my subjective experience.

By default, the heatmap plots every single cell in one column, this might
take forever if you have a lot of cells (would say >10k) or a slow computer
or it can crash when you do not have enough RAM. If so, it might be good to 
set \code{averageCells} to \code{n} where \code{n} is the number of cells you 
want to average. For example, if \code{averageCells = 10} every 10 cells will 
be averaged (without averaging across cell clusters) before plotting the heatmap.
if \code{averageCells =< 1}, no averaging happens. Hint: If you want one column 
per cell cluster, set \code{averageCells} to a very high number.
}
\examples{
data(kidneyTabulaMuris)
sg = sortGenes(kidneyTabulaMuris$exp, kidneyTabulaMuris$cellType)
mm = getMarkers(sg, quant = 0.999)

#this plots a heatmap without reordering genes
plotMarkerHeat(sg$inputMat, sg$inputClass, mm$markers)

#so now cluster genes and return the clustering: a better looking plot
pp = plotMarkerHeat(sg$inputMat, sg$inputClass, mm$markers, clusterGenes=TRUE, outs=TRUE)
pp$gene_class_info #cell clusters

#reorder cell clusters in the heatmap
plotMarkerHeat(sg$inputMat, sg$inputClass, mm$markers, clusterGenes=TRUE, newOrder = c(3,1,2))

#average every 4 cells to make a less intense heatmap
plotMarkerHeat(sg$inputMat, sg$inputClass, mm$markers, clusterGenes=TRUE, newOrder = c(3,2,1),
averageCells = 4)

#only cluster genes, do not make plots
pp = plotMarkerHeat(sg$inputMat, sg$inputClass, mm$markers, clusterGenes=TRUE, 
outs=TRUE, plotheat=FALSE)
}
\author{
Mahmoud M Ibrahim <mmibrahim@pm.me>
}
