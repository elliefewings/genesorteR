% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotBinaryHeat.R
\name{plotBinaryHeat}
\alias{plotBinaryHeat}
\title{plotBinaryHeat}
\usage{
plotBinaryHeat(exp, classes, markers,
  colors = colorRampPalette(c("white", "black"))(n = 100),
  newOrder = 1:length(unique(classes)), clusterGenes = FALSE,
  clusterGenesK = length(unique(classes)), averageCells = 0,
  outs = FALSE, plotheat = TRUE, gaps = TRUE, seed = 10)
}
\arguments{
\item{exp}{A matrix of *binary* (0s and 1s) expression values. For example, the one 
found in  \code{sortGenes(...)$binary}.}

\item{classes}{A vector or factor of cell classes, whose length is equal to
\code{ncol(exp)}.}

\item{markers}{A character vector of gene or peak names to plot in the heatmap.}

\item{colors}{Color palette used for the heatmap.}

\item{newOrder}{Reorder the clusters in the heatmap? See Examples.}

\item{clusterGenes}{Cluster genes before plotting?}

\item{clusterGenesK}{How many clusters should genes by clustered into? See
Details.}

\item{averageCells}{Plot averages of cells instead of individual cells. You 
can use this when you have a large number of cells. See Details.}

\item{outs}{Should gene cluster output and pheatmap object be returned? FALSE
by default.}

\item{plotheat}{Should the heatmap be drawn? TRUE by default.}

\item{gaps}{Should the heatmap have gaps between cell types and gene clusters? 
TRUE by default.}

\item{seed}{Randomization seed used for gene clustering initialization.}
}
\value{
If \code{outs} is TRUE, \code{plotMarkerHeat} returns a list
  containing: \item{p}{The pheatmap object corresponding to the plot.}
  \item{gene_class_info}{Gene cluster assignments if gene clustering was
  requested. See Details.} \item{new_class_info}{The new order of cell
  clusters. See Examples.}
}
\description{
Plot a heatmap binarized values for a select set of genes or peaks across all 
cells. Optionally also cluster those genes.
}
\details{
\code{plotBinaryHeat} is similar to \code{plotMarkerHeat} but works on 
the binarized matrix, plotting only 0s and 1s (for scRNA-Seq, this means ignoring 
expression values and just plotting whether the gene is expressed or not). 
If \code{averageCells} is > 1, the fraction of the averaged cells where the gene 
or peak was detected will be plotted (a number between 0 and 1).

\code{clusterGenesK} parameter controls the number of gene clusters when 
\code{clusterGenes} is \code{TRUE}. By default, it is equal to the number of
cell types/clusters.

By default, the heatmap plots every single cell in one column, this might
take forever if you have a lot of cells (would say >10k) or it can crash when 
you do not have enough RAM. If so, it might be good to set \code{averageCells} 
to \code{n} where \code{n} is the number of cells you 
want to average. For example, if \code{averageCells = 10}, every 10 cells will 
be averaged (without averaging across cell clusters) before plotting the heatmap.
if \code{averageCells =< 1}, no averaging happens. Hints: (1) If you want one column 
per cell cluster, set \code{averageCells} to a very high number (larger than the 
number of cells in the largest cluster). (2) Gene clustering occurs after cell 
averaging, so averaging will be useful in this case to prevent running k-means on 
binary values.
}
\examples{
data(kidneyTabulaMuris)
gs = sortGenes(kidneyTabulaMuris$exp, kidneyTabulaMuris$cellType)
mm = getMarkers(gs, quant = 0.999)

#this plots a heatmap without reordering genes
plotBinaryHeat(gs$binary, gs$inputClass, mm$markers)

}
\seealso{
plotMarkerHeat
}
\author{
Mahmoud M Ibrahim <mmibrahim@pm.me>
}
